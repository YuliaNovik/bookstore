CREATE TABLE BOOK (id INT null Primary Key AUTO_INCREMENT, title VARCHAR(200), author VARCHAR(150), price DEC(200), invQuant INT(50), courses VARCHAR(100), store VARCHAR(50));
INSERT INTO BOOK(title, author, price, invQuant, courses, store) VALUES
('Code Complete', 'Steve McConnell', 50.0, 3, 'Prog_Java', 'Oakville'),
('The Art of Computer Programming', 'Donald E. Knuth', 98.0, 4, 'Prog_Java, Prog_Net', 'Mississauga'),
('Structure and Interpretation of Computer Programs', 'Harold Abelson / Gerald Jay Sussman / Julie Sussman',  87.4, 2, 'Prog_Java', 'Brampton'),
('SQL: The Ultimate Beginners Guide: Learn SQL Today', 'By Steve Tale',  77.4, 3, 'Prog_Net', 'Oakville'),
('Introduction to Algorithms', 'Thomas H. Cormen, Charles E. Leiserson',  58.4, 2, 'Prog_Data', 'Oakville'),
('Introduction to Algorithms', 'Thomas H. Cormen, Charles E. Leiserson',  58.4, 4, 'Prog_Data', 'Mississauga'),
('Introduction to Algorithms', 'Thomas H. Cormen, Charles E. Leiserson',  58.4, 1, 'Prog_Data', 'Brampton'),
('Structure and Interpretation of Computer Programs (SICP)', 'Harold Abelson, Gerald Jay Sussman, Julie Sussman',  65.2, 3, 'Prog_Net', 'Brampton'),
('Structure and Interpretation of Computer Programs (SICP)', 'Harold Abelson, Gerald Jay Sussman, Julie Sussman',  65.2, 2, 'Prog_Net', 'Oakville'),
('Structure and Interpretation of Computer Programs (SICP)', 'Harold Abelson, Gerald Jay Sussman, Julie Sussman',  65.2, 3, 'Prog_Net', 'Mississauga'),
('The Clean Coder: A Code of Conduct for Professional Programmers', 'Robert C. Martin',  49.1, 1, 'Prog_Net', 'Mississauga'),
('The Clean Coder: A Code of Conduct for Professional Programmers', 'Robert C. Martin',  49.1, 2, 'Prog_Net', 'Oakville'),
('The Clean Coder: A Code of Conduct for Professional Programmers', 'Robert C. Martin',  49.1, 2, 'Prog_Net', 'Brampton'),
(' The Pragmatic Programmer', 'Andrew Hunt, David Thomas',  58.1, 2, 'Prog_Data, Prog_Java', 'Brampton'),
(' The Pragmatic Programmer', 'Andrew Hunt, David Thomas',  58.1, 2, 'Prog_Data, Prog_Java', 'Oakville'),
(' The Pragmatic Programmer', 'Andrew Hunt, David Thomas',  58.1, 2, 'Prog_Data, Prog_Java', 'Mississauga'),
('Refactoring: Improving the Design of Existing Code', 'Martin Fowler',  81.5, 1, 'Prog_Net, Prog_Java', 'Mississauga'),
('Refactoring: Improving the Design of Existing Code', 'Martin Fowler',  81.5, 2, 'Prog_Net, Prog_Java', 'Oakville'),
('Refactoring: Improving the Design of Existing Code', 'Martin Fowler',  81.5, 1, 'Prog_Net, Prog_Java', 'Brampton'),
('Absolute Beginner’s Guide to C', 'Greg Perry',  92.2, 5, 'Prog_Net, Prog_Java', 'Brampton'),
('Absolute Beginner’s Guide to C', 'Greg Perry',  92.2, 1, 'Prog_Net, Prog_Java', 'Oakville'),
('Absolute Beginner’s Guide to C', 'Greg Perry',  92.2, 3, 'Prog_Net, Prog_Java', 'Mississauga'),
('Java: A Beginners Guide, Sixth Edition', 'Herb Schildt',  76.7, 3, 'Prog_Net, Prog_Java', 'Mississauga'),
('Java: A Beginners Guide, Sixth Edition', 'Herb Schildt',  76.7, 3, 'Prog_Net, Prog_Java', 'Brampton'),
('Mythical Man Month', 'Fred Brooks',  46.7, 3, 'Prog_Java', 'Oakville'),
('Programming Pearls', 'Jon Bently',  55.4, 2, 'Prog_Java', 'Mississauga'),
('Writing Solid Code', ' Steve Maguire',  68.3, 2, 'Prog_Data', 'Mississauga'),
('Writing Solid Code', ' Steve Maguire',  68.3, 2, 'Prog_Data', 'Brampton'),
('The Relational Model for Database Management', 'EF Codd',  77.2, 1, 'Prog_Data', 'Brampton'),
('Sams Teach Yourself SQL in 10 Minutes', ' Ben Forta', 36.3, 2, 'Prog_Java', 'Oakville');